from selenium import webdriver
from selenium.webdriver.common.keys import Keys

from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

import time

import pandas as pd

path = "C:/Program Files (x86)/chromedriver.exe"
driver = webdriver.Chrome(path)

driver.get("http://www.nexisuni.com/")

## INSERT CVC AND ITS STARTUPS ##
CVC = "headline(Verizon)"
startups = ["headline(Spotify)", "headline(Payphone)"]

## SETTLE DATAFRAME ##
df = pd.DataFrame(columns=['Startup', 'Header', 'Date'])

## ITERATE STARTUPS ##
for startup in startups:
    
## SEARCH QUERY ##
    try:
        search = WebDriverWait(driver, 20).until(
            EC.presence_of_element_located((By.ID, "searchTerms"))
        )
        search.clear()
        search.send_keys(CVC + " and " + startup + " and " + " headline(teams up) or headline(agreement)")
        search.send_keys(Keys.RETURN)
        
    
## SAVE ARTICLES' DATA ##
    finally:
        
        try:
            main = WebDriverWait(driver, 30).until(
                EC.presence_of_element_located((By.ID, "ybvnk"))
            )        
            
# dropdownmenu = main.find_element_by_class_name("dropdown")
# order = dropdownmenu.find_element_by_xpath("//button[5]").click()
            
            articles = main.find_elements_by_xpath("//*[starts-with(@class,'row_sr')]")
            headers = main.find_elements_by_xpath("//h2[@class='doc-title translate']")
            dates = main.find_elements_by_xpath("//dd[4]")
            
            i = 0            
            for i in range(len(articles)):                
                df.loc[i, 'Startup'] = startup
            i = 0
            for header in headers: 
                df.loc[i, 'Header'] = header.text
                i += 1
            i = 0
            for date in dates:    
                df.loc[i, 'Date'] = date.text
                i += 1
                            
                
# discard close dates

# solo alleanze tech, aggiungere termini

    
        finally:
            time.sleep(5)

print(df)
